/*---------11 УРОК-------------------------------*/
/* https://html5book.ru/css3-transform/ */

.box {
  display: grid;
  place-items: center;
  width: 200px;
  height: 200px;
  margin: 10px auto 150px auto;
  border: 2px solid black;
  background: rgba(6, 240, 6, 0.61);
}

/* Значение 1 изменяет масштаб по горизонтали. Значение от 0 до 1 уменьшает элемент, больше 1 — увеличивает.
Значение 2 деформирует (сдвигает) стороны элемента по оси Y, положительное значение — вверх, отрицательное — вниз.
Значение 3 деформирует (сдвигает) стороны элемента по оси X, положительное значение — влево, отрицательное — вправо.
Значение 4 изменяет масштаб по вертикали. Значение меньше 1 уменьшает элемент, больше 1 — увеличивает.
Значение 5 смещает элемент по оси X, положительное — вправо, отрицательное — влево.
Значение 6 смещает элемент по оси Y, положительное значение — вниз, отрицательное — вверх. */

.transformed-A {
  transform: matrix(1.5, -1, 1, 1.5, 40, 10);
}

.transformed-B {
  transform: translate(300px, -100px);
  /* transform: translateX(300px); */
  /* transform: translateY(-100px); */
}

.transformed-C {
  /* scale(x,y) */
  transform: scale(3, 2);
}

.transformed-D {
  /* skew Используется для деформирования (искажения) сторон элемента относительно координатных осей. 
  Если указано одно значение, второе будет определено браузером автоматически. */
  /* transform: skewX(2);
  transform: skewY(2); */
  transform: rotate(35deg);

  transform-origin: left bottom;
}

.transformed-I {
  transform: scale(1.5) rotate(-10deg);
}

/* Переходы https://html5book.ru/css3-transition/ */
.transformed-F {
  /* transition: width 2s, height 3s background 0.5s; */
  transition: all 1s;
  /* transition-property: width; */
  transition-duration: 4s;
  transition-timing-function: ease;
  /* transition-timing-function: ease-in;
  transition-timing-function: ease-out;
  transition-timing-function: ease-in-out;
  transition-timing-function: linear;
  transition-timing-function: step-start;
  transition-timing-function: step-end; */
  /* transition-timing-function: steps(6, end); */

  /* задержка начала перехода */
  transition-delay: 0.3s;

  /* transition: <property> <duration> <timing-function> <delay>; */
}

.transformed-F:hover {
  width: 350px;
  height: 250px;
  background: rgba(39, 64, 143, 0.664);
  border-radius: 50%;
}

.transformed-G > * {
  transition: transform 1s ease-in;
}

.transformed-G:hover > * {
  transform: scale(6) rotate(360deg) translateY(6px);
}
